"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _react() {
  const data = _interopRequireDefault(require("react"));

  _react = function _react() {
    return data;
  };

  return data;
}

function _umi() {
  const data = require("umi");

  _umi = function _umi() {
    return data;
  };

  return data;
}

function _fs() {
  const data = require("fs");

  _fs = function _fs() {
    return data;
  };

  return data;
}

function _path() {
  const data = require("path");

  _path = function _path() {
    return data;
  };

  return data;
}

var _server = _interopRequireDefault(require("./server"));

var _utils = require("./utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

const winPath = _umi().utils.winPath,
      Mustache = _umi().utils.Mustache;

var _default = api => {
  const paths = api.paths; // 客户端

  api.addUIPlugin(() => require.resolve('../../dist/index.umd')); // 服务端

  (0, _server.default)(api); // let routeComponents = null;
  // api.onRouteChange(() => {
  //   routeComponents = api.getRouteComponents();
  // });

  api.modifyBabelOpts( /*#__PURE__*/function () {
    var _ref = _asyncToGenerator(function* (babelOpts) {
      const routes = yield api.getRoutes();
      const routeComponents = (0, _utils.getRouteComponents)({
        componentRoutes: routes,
        paths,
        cwd: api.cwd
      });
      const plugins = babelOpts.plugins;
      return _objectSpread(_objectSpread({}, babelOpts), {}, {
        plugins: [...plugins, [require.resolve('../sdk/flagBabelPlugin'), {
          doTransform(filename) {
            return routeComponents.some(routeComponent => winPath(filename) === winPath(routeComponent));
          }

        }]]
      });
    });

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }());
  api.addEntryCodeAhead(() => {
    const injectUIFlagTpl = (0, _fs().readFileSync)((0, _path().join)(__dirname, './templates/injectUIFlag.ts.tpl'), 'utf-8');
    return Mustache.render(injectUIFlagTpl, {
      GUmiUIFlagPath: winPath(require.resolve('../sdk/flagBabelPlugin/GUmiUIFlag'))
    });
  });
};

exports.default = _default;